{"ast":null,"code":"var _jsxFileName = \"/home/arthur/delivery/JAM-3/jam3/src/GoalTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoalTracker({\n  onGoalAdd,\n  onGoalComplete\n}) {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const addGoal = () => {\n    if (input) {\n      const newGoals = [...goals, {\n        text: input,\n        completed: false\n      }];\n      setGoals(newGoals);\n      setInput(\"\");\n      onGoalAdd();\n    }\n  };\n  const toggleGoalCompletion = index => {\n    const newGoals = [...goals];\n    newGoals[index].completed = !newGoals[index].completed;\n    setGoals(newGoals);\n    onGoalComplete(newGoals.filter(goal => goal.completed).length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suivi des Objectifs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Ajouter un nouvel objectif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGoal,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: goal.completed,\n          onChange: () => toggleGoalCompletion(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), goal.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(GoalTracker, \"2ir+I49Kt2lvlZW77zvBshzI9Z8=\");\n_c = GoalTracker;\nexport default GoalTracker;\nvar _c;\n$RefreshReg$(_c, \"GoalTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GoalTracker","onGoalAdd","onGoalComplete","_s","goals","setGoals","input","setInput","addGoal","newGoals","text","completed","toggleGoalCompletion","index","filter","goal","length","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","checked","_c","$RefreshReg$"],"sources":["/home/arthur/delivery/JAM-3/jam3/src/GoalTracker.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction GoalTracker({ onGoalAdd, onGoalComplete }) {\n  const [goals, setGoals] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const addGoal = () => {\n    if (input) {\n      const newGoals = [...goals, { text: input, completed: false }];\n      setGoals(newGoals);\n      setInput(\"\");\n      onGoalAdd();\n    }\n  };\n\n  const toggleGoalCompletion = (index) => {\n    const newGoals = [...goals];\n    newGoals[index].completed = !newGoals[index].completed;\n    setGoals(newGoals);\n    onGoalComplete(newGoals.filter(goal => goal.completed).length);\n  };\n\n  return (\n    <div>\n      <h2>Suivi des Objectifs</h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Ajouter un nouvel objectif\"\n      />\n      <button onClick={addGoal}>Ajouter</button>\n      <ul>\n        {goals.map((goal, index) => (\n          <li key={index}>\n            <input\n              type=\"checkbox\"\n              checked={goal.completed}\n              onChange={() => toggleGoalCompletion(index)}\n            />\n            {goal.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default GoalTracker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,SAAS;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,KAAK,EAAE;MACT,MAAMG,QAAQ,GAAG,CAAC,GAAGL,KAAK,EAAE;QAAEM,IAAI,EAAEJ,KAAK;QAAEK,SAAS,EAAE;MAAM,CAAC,CAAC;MAC9DN,QAAQ,CAACI,QAAQ,CAAC;MAClBF,QAAQ,CAAC,EAAE,CAAC;MACZN,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAMW,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMJ,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAAC;IAC3BK,QAAQ,CAACI,KAAK,CAAC,CAACF,SAAS,GAAG,CAACF,QAAQ,CAACI,KAAK,CAAC,CAACF,SAAS;IACtDN,QAAQ,CAACI,QAAQ,CAAC;IAClBP,cAAc,CAACO,QAAQ,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,SAAS,CAAC,CAACK,MAAM,CAAC;EAChE,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAA4B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAEpB,OAAQ;MAAAS,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CtB,OAAA;MAAAkB,QAAA,EACGb,KAAK,CAACyB,GAAG,CAAC,CAACd,IAAI,EAAEF,KAAK,kBACrBd,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UACEuB,IAAI,EAAC,UAAU;UACfQ,OAAO,EAAEf,IAAI,CAACJ,SAAU;UACxBa,QAAQ,EAAEA,CAAA,KAAMZ,oBAAoB,CAACC,KAAK;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,EACDN,IAAI,CAACL,IAAI;MAAA,GANHG,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CA5CQH,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}